// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package server

import (
	"context"

	"rpc/internal/logic"
	"rpc/internal/pb"
	"rpc/internal/svc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

// 注册
func (s *UserServiceServer) Register(ctx context.Context, in *pb.RegisterRequest) (*pb.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

// 登录
func (s *UserServiceServer) Login(ctx context.Context, in *pb.LoginRequest) (*pb.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

// 获取用户信息
func (s *UserServiceServer) GetUserInfo(ctx context.Context, in *pb.UserInfoRequest) (*pb.UserInfoResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

// 展示用户列表
func (s *UserServiceServer) ListUsers(ctx context.Context, in *pb.ListUsersRequest) (*pb.ListUsersResponse, error) {
	l := logic.NewListUsersLogic(ctx, s.svcCtx)
	return l.ListUsers(in)
}

// 获取用户详细信息
func (s *UserServiceServer) GetUserDetails(ctx context.Context, in *pb.GetUserDetailsRequest) (*pb.GetUserDetailsResponse, error) {
	l := logic.NewGetUserDetailsLogic(ctx, s.svcCtx)
	return l.GetUserDetails(in)
}
